#!/usr/bin/env python
# -*- coding:utf-8 -*-

'''
Python 支持的基本数据类型，并列举各类型的定义和赋值操作
'''


None
Bool
    and, or, not

数值型：
整数、浮点数、复数
int():将 x 转换为整数
float():将 x 转换为浮点数
complex()：一个带有实部 re 和虚部 im 的复数。im 默认为0。


序列：
字符串、列表、元组
str  符串是由 Unicode 码位构成的不可变 序列。 字符串字面值有多种不同的写法;
    三种写法：
        单引号: '允许包含有 "双" 引号'
        双引号: "允许包含有 '单' 引号"。
        三重引号: '''三重单引号''', """三重双引号"""
list: 可变序列，通常用于存放同类项目的集合
tuple 元组是不可变序列，通常用于储存异构数据的多项集
range 表示不可变的数字序列，通常用于在 for 循环中循环指定的次数。


集合：
字典
set 对象是由具有唯一性的 hashable 对象所组成的无序多项集。 常见的用途包括成员检测、从序列中去除重复项以及数学中的集合类计算，例如交集、并集、差集与对称差集等等。
目前有两种内置集合类型，set 和 frozenset。 set 类型是可变的 --- 其内容可以使用 add() 和 remove() 这样的方法来改变。 由于是可变类型，它没有哈希值，且不能被用作字典的键或其他集合的元素。 frozenset 类型是不可变并且为 hashable --- 其内容在被创建后不能再改变；因此它可以被用作字典的键或其他集合的元素。

dict
有一种标准映射类型 字典，字典的键 几乎 可以是任何值


二进制序列类型 --- bytes, bytearray, memoryview
bytes 对象
bytes 对象是由单个字节构成的不可变序列。 由于许多主要二进制协议都基于 ASCII 文本编码，因此 bytes 对象提供了一些仅在处理 ASCII 兼容数据时可用，并且在许多特性上与字符串对象紧密相关的方法。
bytearray 对象是 bytes 对象的可变对应物。
memoryview 对象允许 Python 代码访问一个对象的内部数据，只要该对象支持 缓冲区协议 而无需进行拷贝。
